{"version":3,"file":"static/js/247.39c0a37c.chunk.js","mappings":"8LAiCA,UAzBa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,EACvB,GAAE,CAACC,KAGF,0BACE,wBACGF,EAAKO,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,KACND,EAAME,cACL,gBAAKC,IAAG,UAnBN,kCAmBqBH,EAAME,cAAgBE,IAAKJ,EAAMC,QAExD,gBAAKE,IAAG,UAnBpB,6HAmB0CC,IAAKJ,EAAMC,SALpCD,EAAMK,GADF,OAatB,C,8LC/BKC,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBE,EAAY,mCAAG,WAAON,GAAP,yFACHE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,EAAlC,oBADG,uBACjBI,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKZE,EAAe,mCAAG,WAAMC,GAAN,yFACON,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,EAApD,+CADP,uBACZJ,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfZ,EAAO,mCAAG,WAAMH,GAAN,yFACSa,EAAAA,GAAAA,IAAA,iBAAoBb,EAApB,4BAA+CY,EAA/C,oBADT,uBACNd,EADM,EACZkB,KAAMlB,KADM,kBAGZA,GAHY,2CAAH,sDAMPsB,EAAU,mCAAG,WAAMpB,GAAN,yFACDa,EAAAA,GAAAA,IAAA,iBAAoBb,EAApB,4BAA+CY,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,qD","sources":["components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'servises/api';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w200';\nconst posterFakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.name}\n            {actor.profile_path ? (\n              <img src={`${baseUrl + actor.profile_path}`} alt={actor.name} />\n            ) : (\n              <img src={`${posterFakeUrl}`} alt={actor.name} />\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","then","map","actor","name","profile_path","src","alt","id","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","getFilmsByQuery","query","getReviews"],"sourceRoot":""}