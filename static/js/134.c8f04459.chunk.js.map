{"version":3,"file":"static/js/134.c8f04459.chunk.js","mappings":"+NAIMA,EAAmBC,EAAAA,GAAAA,IAAH,8GAMhBC,EAAUD,EAAAA,GAAAA,GAAH,iNAYPE,EAAOF,EAAAA,GAAAA,GAAH,sXAmBJG,EAAMH,EAAAA,GAAAA,IAAH,gFAcII,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,WACE,SAACE,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,UAAC,KAAD,CAASQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,UACGG,EAAMK,OAASL,EAAMM,KACrBN,EAAMO,aACL,SAACb,EAAD,CAAKc,IAAG,UAdR,kCAcuBR,EAAMO,aAAeE,IAAKT,EAAMK,SAEvD,SAACX,EAAD,CAAKc,IAAG,UAdtB,6HAc4CC,IAAKT,EAAMK,YANpCL,EAAME,GADF,OAexB,C,uFCzCD,UA7Be,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAeiB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMN,EAAQI,EAAaG,IAAI,SAC1BP,IAGLQ,EAAAA,EAAAA,IAAgBR,GAAOS,KAAKP,EAC7B,GAAE,CAACE,KAEF,4BACE,kBAAMM,SAbW,SAAAC,GACnBA,EAAEC,iBACFP,EAAgB,CAAEL,MAAAA,GACnB,EAUG,WACE,kBAAOa,KAAK,OAAOlB,KAAK,QAAQmB,SAjBjB,SAAAH,GACnBV,EAASU,EAAEI,OAAOC,MACnB,EAe6DA,MAAOhB,KAC/D,mBAAQa,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY5B,OAAQA,MAGzB,C,sNChCKgC,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBE,EAAY,mCAAG,WAAO/B,GAAP,yFACD2B,EAAAA,GAAAA,IAAA,iBAAoB3B,EAApB,oBAAkC0B,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH,sDAMZb,EAAe,mCAAG,WAAMR,GAAN,yFACOkB,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDjB,EAApD,+CADP,uBACZoB,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfG,EAAO,mCAAG,WAAMC,GAAN,yFACSN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,4BAA+CP,EAA/C,oBADT,uBACNQ,EADM,EACZJ,KAAMI,KADM,kBAGZA,GAHY,2CAAH,sDAMPC,EAAU,mCAAG,WAAMF,GAAN,yFACDN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,4BAA+CP,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,sDAMVO,EAAS,mCAAE,WAAOH,GAAP,yFACUN,EAAAA,GAAAA,IAAA,iBAAoBM,EAApB,oBAAuCP,IADjD,uBACPW,EADO,EACbP,KAAMO,OADO,kBAGbA,GAHa,2CAAF,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","servises/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GalleryContainer = styled.div`\n  width: 1280px;\n  padding: 52px 24px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Gallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: -16px;\n  list-style: none;\n  text-decoration: none;\n\n  padding: 0;\n  margin: 0;\n`;\nconst Item = styled.li`\n  position: relative;\n  width: calc(33.3333% - 32px);\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n\n  transition-property: scale;\n  transition-duration: 500ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n    // background-color: #d4d4d4;\n    // z-index: 10;\n  }\n`;\n\nconst Img = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n`;\n// NavLink = styled.a`\n//   margin-bottom: 12 px;\n//   overflow: hidden;\n// `;\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\nconst posterFakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <GalleryContainer>\n      <Gallery>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title || movie.name}\n              {movie.poster_path ? (\n                <Img src={`${baseUrl + movie.poster_path}`} alt={movie.title} />\n              ) : (\n                <Img src={`${posterFakeUrl}`} alt={movie.title} />\n              )}\n            </NavLink>\n          </Item>\n        ))}\n      </Gallery>\n    </GalleryContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByQuery } from 'servises/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    getFilmsByQuery(query).then(setMovies);\n  }, [searchParams]);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movie\" onChange={handleChange} value={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    // console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\nexport const getGenres= async (movieId) => {\n    const {data:{genres}} = await axios.get(`/movie/${movieId}?api_key=${KEY_API}`);\n    // console.log(res.data.genres)\n    return genres;\n}\n\n\n"],"names":["GalleryContainer","styled","Gallery","Item","Img","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","name","poster_path","src","alt","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","getFilmsByQuery","then","onSubmit","e","preventDefault","type","onChange","target","value","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","getCast","movieId","cast","getReviews","getGenres","genres"],"sourceRoot":""}