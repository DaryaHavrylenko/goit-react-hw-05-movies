{"version":3,"file":"static/js/186.bce0a0d2.chunk.js","mappings":"8LA6BA,UAzBgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAASI,KAAKL,EAC1B,GAAE,CAACC,KAGF,yBACGF,EAAQO,OAAS,GAChB,+BACGP,QADH,IACGA,OADH,EACGA,EAASQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,2BACE,mCAAWD,MACX,uBAAIC,MAFGF,EADG,OAQhB,uCAIP,C,8LC3BKG,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBE,EAAY,mCAAG,WAAOR,GAAP,yFACDI,EAAAA,GAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCG,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KACRE,QAAQC,IAAIH,GAFY,kBAGjBA,GAHiB,2CAAH,sDAMZI,EAAe,mCAAG,WAAMC,GAAN,yFACOR,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,+CADP,uBACZN,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfO,EAAO,mCAAG,WAAMpB,GAAN,yFACSW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,4BAA+CU,EAA/C,oBADT,uBACNW,EADM,EACZP,KAAMO,KADM,kBAGZA,GAHY,2CAAH,sDAMPlB,EAAU,mCAAG,WAAMH,GAAN,yFACDW,EAAAA,GAAAA,IAAA,iBAAoBX,EAApB,4BAA+CU,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servises/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews?.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author:{author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\n\nexport const fetchGenres = async () => {\n    if (localStorage.getItem(\"genresDataArray\" !== null)) {\n        return\n    }\n       try {\n           const genresDataArray = await axios.get(`/genre/movie/list?language=en-US&api_key=${KEY_API}`)\n           if (genresDataArray.status !== 200) {\n               return\n           }\n        //    console.log(genresDataArray.data.genres)\n        \n           localStorage.setItem(\n             'genresDataArray',\n             JSON.stringify(genresDataArray.data.genres)\n           );\n        \n       } catch (error) {\n        console.log(error)\n       }\n     \n     \n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","then","length","map","id","author","content","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","console","log","getFilmsByQuery","query","getCast","cast"],"sourceRoot":""}