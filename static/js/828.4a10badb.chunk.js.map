{"version":3,"file":"static/js/828.4a10badb.chunk.js","mappings":"uMA0DA,UAhDsB,WAGpB,OAA2BA,EAAAA,EAAAA,UAAS,MAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAASQ,KAAKT,EAC5B,GAAE,CAACC,IAUJ,GAAKF,EAIL,OACE,iCACE,mBAAQW,KAAK,SAASC,QAVL,WACnBN,EAASF,EAASS,MAAMC,KACzB,EAQG,sBAGA,4BACE,wBAAKd,EAAMe,SACX,gBAAKC,IAAG,UAjCA,kCAiCehB,EAAMiB,aAAeC,IAAKlB,EAAMe,SACvD,wCAAgBf,EAAMmB,WAAWC,QAAQ,OACzC,yCAAiBpB,EAAMqB,aAAaD,QAAQ,OAC5C,sCAAcpB,EAAMsB,gBAGtB,mDACA,SAAC,KAAD,CAAMC,GAAG,OAAOV,MAAOT,EAASS,MAAhC,mBAGA,SAAC,KAAD,CAAMU,GAAG,UAAUV,MAAOT,EAASS,MAAnC,sBAGA,SAAC,KAAD,MAGL,C,8LCxDKW,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBlB,EAAY,mCAAG,WAAOoB,GAAP,yFACDJ,EAAAA,GAAAA,IAAA,iBAAoBI,EAApB,oBAAkCL,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KACRE,QAAQC,IAAIH,GAFY,kBAGjBA,GAHiB,2CAAH,sDAMZI,EAAe,mCAAG,WAAMC,GAAN,yFACOR,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,+CADP,uBACZN,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfO,EAAO,mCAAG,WAAMhC,GAAN,yFACSuB,EAAAA,GAAAA,IAAA,iBAAoBvB,EAApB,4BAA+CsB,EAA/C,oBADT,uBACNW,EADM,EACZP,KAAMO,KADM,kBAGZA,GAHY,2CAAH,sDAMPC,EAAU,mCAAG,WAAMlC,GAAN,yFACDuB,EAAAA,GAAAA,IAAA,iBAAoBvB,EAApB,4BAA+CsB,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,qD","sources":["pages/MoviesDetails.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getFilmsById } from '../servises/api';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate, Link } from 'react-router-dom';\n// import { fetchGenres } from '../servises/api';\n// import { Genres } from 'components/Genres/Genres';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesDetails = () => {\n  // const genre = JSON.parse(localStorage.getItem('genresDataArray'));\n  // const [genres, setGenres] = useState([]);\n  const [movie, setMovies] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getFilmsById(movieId).then(setMovies);\n  }, [movieId]);\n\n  // useEffect(() => {\n  //   fetchGenres(genres).then(setGenres);\n  // }, [genres]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <div>\n        <h1>{movie.title}</h1>\n        <img src={`${baseUrl + movie.poster_path}`} alt={movie.title} />\n        <p>Popularity: {movie.popularity.toFixed(0)}</p>\n        <p>Vote Average:{movie.vote_average.toFixed(1)}</p>\n        <p>Overview: {movie.overview}</p>\n        {/* <Genres /> */}\n      </div>\n      <p>Additional information</p>\n      <Link to=\"cast\" state={location.state}>\n        Cast\n      </Link>\n      <Link to=\"reviews\" state={location.state}>\n        Reviews\n      </Link>\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesDetails;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\n\nexport const fetchGenres = async () => {\n    if (localStorage.getItem(\"genresDataArray\" !== null)) {\n        return\n    }\n       try {\n           const genresDataArray = await axios.get(`/genre/movie/list?language=en-US&api_key=${KEY_API}`)\n           if (genresDataArray.status !== 200) {\n               return\n           }\n        //    console.log(genresDataArray.data.genres)\n        \n           localStorage.setItem(\n             'genresDataArray',\n             JSON.stringify(genresDataArray.data.genres)\n           );\n        \n       } catch (error) {\n        console.log(error)\n       }\n     \n     \n}"],"names":["useState","movie","setMovies","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getFilmsById","then","type","onClick","state","from","title","src","poster_path","alt","popularity","toFixed","vote_average","overview","to","KEY_API","axios","getTrendingFilms","results","data","id","console","log","getFilmsByQuery","query","getCast","cast","getReviews"],"sourceRoot":""}