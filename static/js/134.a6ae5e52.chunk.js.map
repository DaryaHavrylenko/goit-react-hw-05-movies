{"version":3,"file":"static/js/134.a6ae5e52.chunk.js","mappings":"qMAOaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,UACGG,EAAMK,OAASL,EAAMM,KACrBN,EAAMO,aACL,gBAAKC,IAAG,UAbN,kCAaqBR,EAAMO,aAAeE,IAAKT,EAAMK,SAEvD,gBAAKG,IAAG,UAbpB,6HAa0CC,IAAKT,EAAMK,YANtCL,EAAME,GADA,KActB,C,uFCSD,UA7Be,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAeiB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAgBA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMN,EAAQI,EAAaG,IAAI,SAC1BP,IAGLQ,EAAAA,EAAAA,IAAgBR,GAAOS,KAAKP,EAC7B,GAAE,CAACE,KAEF,4BACE,kBAAMM,SAbW,SAAAC,GACnBA,EAAEC,iBACFP,EAAgB,CAAEL,MAAAA,GACnB,EAUG,WACE,kBAAOa,KAAK,OAAOlB,KAAK,QAAQmB,SAjBjB,SAAAH,GACnBV,EAASU,EAAEI,OAAOC,MACnB,EAe6DA,MAAOhB,KAC/D,mBAAQa,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY5B,OAAQA,MAGzB,C,8LChCKgC,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBE,EAAY,mCAAG,WAAO/B,GAAP,yFACD2B,EAAAA,GAAAA,IAAA,iBAAoB3B,EAApB,oBAAkC0B,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KACRE,QAAQC,IAAIH,GAFY,kBAGjBA,GAHiB,2CAAH,sDAMZb,EAAe,mCAAG,WAAMR,GAAN,yFACOkB,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDjB,EAApD,+CADP,uBACZoB,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfK,EAAO,mCAAG,WAAMC,GAAN,yFACSR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CT,EAA/C,oBADT,uBACNU,EADM,EACZN,KAAMM,KADM,kBAGZA,GAHY,2CAAH,sDAMPC,EAAU,mCAAG,WAAMF,GAAN,yFACDR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,4BAA+CT,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","servises/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\nconst posterFakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.name}\n            {movie.poster_path ? (\n              <img src={`${baseUrl + movie.poster_path}`} alt={movie.title} />\n            ) : (\n              <img src={`${posterFakeUrl}`} alt={movie.title} />\n            )}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByQuery } from 'servises/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    getFilmsByQuery(query).then(setMovies);\n  }, [searchParams]);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movie\" onChange={handleChange} value={query} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\n\nexport const fetchGenres = async () => {\n    if (localStorage.getItem(\"genresDataArray\" !== null)) {\n        return\n    }\n       try {\n           const genresDataArray = await axios.get(`/genre/movie/list?language=en-US&api_key=${KEY_API}`)\n           if (genresDataArray.status !== 200) {\n               return\n           }\n        //    console.log(genresDataArray.data.genres)\n        \n           localStorage.setItem(\n             'genresDataArray',\n             JSON.stringify(genresDataArray.data.genres)\n           );\n        \n       } catch (error) {\n        console.log(error)\n       }\n     \n     \n}"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","name","poster_path","src","alt","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","getFilmsByQuery","then","onSubmit","e","preventDefault","type","onChange","target","value","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","console","log","getCast","movieId","cast","getReviews"],"sourceRoot":""}