{"version":3,"file":"static/js/247.8e8e0883.chunk.js","mappings":"kNAKMA,EAAOC,EAAAA,GAAAA,GAAH,kDA2CV,UAnCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAASI,KAAKL,EACvB,GAAE,CAACC,KAGF,yBACGF,EAAKO,OAAS,GACb,wBACGP,EAAKQ,KAAI,SAAAC,GAAK,OACb,UAACZ,EAAD,WACGY,EAAMC,cACL,gBAAKC,IAAG,UAnBR,kCAmBuBF,EAAMC,cAAgBE,IAAKH,EAAMI,QAExD,gBACEF,IAAG,UApBnB,6HAqBgBC,IAAKH,EAAMI,KACXC,MAAO,IACPC,OAAQ,OAGZ,uBAAIN,EAAMI,QACV,uCAAeJ,EAAMO,eAZZP,EAAMQ,GADJ,OAkBjB,2CAIP,C,sNC9CKC,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBE,EAAY,mCAAG,WAAON,GAAP,yFACDE,EAAAA,GAAAA,IAAA,iBAAoBF,EAApB,oBAAkCC,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH,sDAMZE,EAAe,mCAAG,WAAMC,GAAN,yFACON,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDO,EAApD,+CADP,uBACZJ,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfhB,EAAO,mCAAG,WAAMH,GAAN,yFACSiB,EAAAA,GAAAA,IAAA,iBAAoBjB,EAApB,4BAA+CgB,EAA/C,oBADT,uBACNlB,EADM,EACZsB,KAAMtB,KADM,kBAGZA,GAHY,2CAAH,sDAMP0B,EAAU,mCAAG,WAAMxB,GAAN,yFACDiB,EAAAA,GAAAA,IAAA,iBAAoBjB,EAApB,4BAA+CgB,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,sDAMVM,EAAS,mCAAE,WAAOzB,GAAP,yFACUiB,EAAAA,GAAAA,IAAA,iBAAoBjB,EAApB,oBAAuCgB,IADjD,uBACPU,EADO,EACbN,KAAMM,OADO,kBAGbA,GAHa,2CAAF,qD","sources":["components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'servises/api';\nimport styled from 'styled-components';\n\nconst Item = styled.li`\n  list-style-type: none;\n`;\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w200';\nconst posterFakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <Item key={actor.id}>\n              {actor.profile_path ? (\n                <img src={`${baseUrl + actor.profile_path}`} alt={actor.name} />\n              ) : (\n                <img\n                  src={`${posterFakeUrl}`}\n                  alt={actor.name}\n                  width={200}\n                  height={300}\n                />\n              )}\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </Item>\n          ))}\n        </ul>\n      ) : (\n        <p>No information</p>\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    // console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\nexport const getGenres= async (movieId) => {\n    const {data:{genres}} = await axios.get(`/movie/${movieId}?api_key=${KEY_API}`);\n    // console.log(res.data.genres)\n    return genres;\n}\n\n\n"],"names":["Item","styled","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","length","map","actor","profile_path","src","alt","name","width","height","character","id","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","getFilmsByQuery","query","getReviews","getGenres","genres"],"sourceRoot":""}