{"version":3,"file":"static/js/134.39592a32.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","servises/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GalleryContainer = styled.div`\n  width: 1280px;\n  padding: 52px 24px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Gallery = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  margin: -16px;\n  list-style: none;\n  text-decoration: none;\n\n  padding: 0;\n  margin: 0;\n`;\nconst Item = styled.li`\n  position: relative;\n  width: calc(33.3333% - 32px);\n  margin: 10px;\n  display: flex;\n  justify-content: center;\n\n  transition-property: scale;\n  transition-duration: 500ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.03;\n    // background-color: #d4d4d4;\n    // z-index: 10;\n  }\n`;\n\nconst Img = styled.img`\n  border-radius: 5px;\n  width: 395px;\n  height: 575px;\n  transition-property: scale;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition: all 1s ease-out;\n\n  cursor: pointer;\n  &:hover {\n    scale: 1.15;\n  }\n`;\nconst Link = styled(NavLink)`\n  margin-bottom: 12 px;\n  overflow: hidden;\n  list-style: none;\n  text-decoration: none;\n\n  padding: 0;\n  margin: 0;\n`;\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\nconst posterFakeUrl =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <GalleryContainer>\n      <Gallery>\n        {movies.map(movie => (\n          <Item key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.poster_path ? (\n                <Img src={`${baseUrl + movie.poster_path}`} alt={movie.title} />\n              ) : (\n                <Img src={`${posterFakeUrl}`} alt={movie.title} />\n              )}\n              {movie.title || movie.name}\n            </Link>\n          </Item>\n        ))}\n      </Gallery>\n    </GalleryContainer>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getFilmsByQuery } from 'servises/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { FcSearch } from 'react-icons/fc';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 10px;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nconst Input = styled.input`\n  display: inline-block;\n\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  border-radius: 10px;\n  outline: none;\n  padding-left: 7px;\n  padding-right: 10px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\nconst FormButton = styled.button`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  border-radius: 10px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n      return;\n    }\n    getFilmsByQuery(query).then(setMovies);\n  }, [searchParams]);\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"movie\"\n          onChange={handleChange}\n          value={query}\n          placeholder=\"Search movie\"\n        />\n        <FormButton type=\"submit\">\n          <FcSearch size=\"1rem\" />\n        </FormButton>\n      </Form>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    // console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\nexport const getGenres= async (movieId) => {\n    const {data:{genres}} = await axios.get(`/movie/${movieId}?api_key=${KEY_API}`);\n    // console.log(res.data.genres)\n    return genres;\n}\n\n\n"],"names":["GalleryContainer","styled","Gallery","Item","Img","Link","NavLink","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","title","name","Form","Input","FormButton","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","getFilmsByQuery","then","onSubmit","e","preventDefault","type","onChange","target","value","placeholder","size","KEY_API","axios","getTrendingFilms","results","data","getFilmsById","getCast","movieId","cast","getReviews","getGenres","genres"],"sourceRoot":""}