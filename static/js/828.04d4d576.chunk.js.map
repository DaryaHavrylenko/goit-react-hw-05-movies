{"version":3,"file":"static/js/828.04d4d576.chunk.js","mappings":"+NAOMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,oGAMJE,EAAcF,EAAAA,GAAAA,GAAH,kDAGXG,EAAaH,EAAAA,GAAAA,GAAH,6EA8DhB,UAtDsB,WACpB,OAA2BI,EAAAA,EAAAA,UAAS,MAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GAASQ,KAAKX,EAC5B,GAAE,CAACG,KAEJM,EAAAA,EAAAA,YAAU,YACRG,EAAAA,EAAAA,IAAUT,GAASQ,KAAKT,EACzB,GAAE,CAACC,IAKJ,GAAKJ,GAGAE,EAIL,OACE,iCACE,mBAAQY,KAAK,SAASC,QAbL,WACnBP,EAASF,EAASU,MAAMC,KACzB,EAWG,sBAGA,4BACE,wBAAKjB,EAAMkB,SACX,gBAAKC,IAAG,UAlCA,kCAkCenB,EAAMoB,eAAiBC,IAAKrB,EAAMkB,SACzD,wCAAgBlB,EAAMsB,WAAWC,QAAQ,OACzC,yCAAiBvB,EAAMwB,aAAaD,QAAQ,OAC5C,UAACzB,EAAD,qBAEGI,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,SAAC9B,EAAD,UAAuB8B,GAALD,EADR,QAId,sCAAc1B,EAAM4B,gBAEtB,mDACA,SAAClC,EAAD,CAAMmC,GAAG,OAAOb,MAAOV,EAASU,MAAhC,mBAGA,SAACtB,EAAD,CAAMmC,GAAG,UAAUb,MAAOV,EAASU,MAAnC,sBAGA,SAAC,KAAD,MAGL,C,sNC5EKc,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAuB,+BAGhB,IAAMC,EAAgB,mCAAG,sGACOD,EAAAA,GAAAA,IAAA,sCAAyCD,IADhD,uBACZG,EADY,EACpBC,KAAQD,QADY,kBAGrBA,GAHqB,2CAAH,qDAMhBtB,EAAY,mCAAG,WAAOe,GAAP,yFACDK,EAAAA,GAAAA,IAAA,iBAAoBL,EAApB,oBAAkCI,EAAlC,oBADC,uBAChBI,EADgB,EAChBA,KADgB,kBAGjBA,GAHiB,2CAAH,sDAMZC,EAAe,mCAAG,WAAMC,GAAN,yFACOL,EAAAA,GAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDM,EAApD,+CADP,uBACZH,EADY,EACnBC,KAAOD,QADY,kBAEpBA,GAFoB,2CAAH,sDAKfI,EAAO,mCAAG,WAAMjC,GAAN,yFACS2B,EAAAA,GAAAA,IAAA,iBAAoB3B,EAApB,4BAA+C0B,EAA/C,oBADT,uBACNQ,EADM,EACZJ,KAAMI,KADM,kBAGZA,GAHY,2CAAH,sDAMPC,EAAU,mCAAG,WAAMnC,GAAN,yFACD2B,EAAAA,GAAAA,IAAA,iBAAoB3B,EAApB,4BAA+C0B,EAA/C,2BADC,uBACfI,EADe,EACfA,KADe,kBAGfA,EAAKD,SAHU,2CAAH,sDAMVpB,EAAS,mCAAE,WAAOT,GAAP,yFACU2B,EAAAA,GAAAA,IAAA,iBAAoB3B,EAApB,oBAAuC0B,IADjD,uBACP5B,EADO,EACbgC,KAAMhC,OADO,kBAGbA,GAHa,2CAAF,qD","sources":["pages/MoviesDetails.jsx","servises/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport { getFilmsById, getGenres } from '../servises/api';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\nconst ItemsGenres = styled.li`\n  list-style-type: none;\n`;\nconst GenresList = styled.ul`\n  /* display: flex; */\n  padding: 0;\n  margin: 0;\n`;\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesDetails = () => {\n  const [movie, setMovies] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getFilmsById(movieId).then(setMovies);\n  }, [movieId]);\n\n  useEffect(() => {\n    getGenres(movieId).then(setGenres);\n  }, [movieId]);\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movie) {\n    return;\n  }\n  if (!genres) {\n    return;\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <div>\n        <h1>{movie.title}</h1>\n        <img src={`${baseUrl + movie.backdrop_path}`} alt={movie.title} />\n        <p>Popularity: {movie.popularity.toFixed(0)}</p>\n        <p>Vote Average:{movie.vote_average.toFixed(1)}</p>\n        <GenresList>\n          Genres:\n          {genres.map(({ id, name }) => (\n            <ItemsGenres key={id}>{name}</ItemsGenres>\n          ))}\n        </GenresList>\n        <p>Overview: {movie.overview}</p>\n      </div>\n      <p>Additional information</p>\n      <Link to=\"cast\" state={location.state}>\n        Cast\n      </Link>\n      <Link to=\"reviews\" state={location.state}>\n        Reviews\n      </Link>\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesDetails;\n","import axios from 'axios';\nconst KEY_API = '301d018a3b09052968e9ce18b1793bab'\n\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\n\nexport const getTrendingFilms = async () => {\n    const { data: { results} } = await axios.get(`/trending/movie/day?api_key=${KEY_API}`);\n    \n    return results;\n}\n\nexport const getFilmsById = async (id) => {\n    const { data } = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    // console.log(data)\n    return data;\n}\n\nexport const getFilmsByQuery = async query => {\n    const { data: {results} } = await axios.get(`/search/movie?api_key=${KEY_API}&query=${query}&language=en-US&page=1&include_adult=false`);\n    return results\n}\n\nexport const getCast = async movieId => {\n    const {data:{cast}} = await axios.get(`/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`);\n   \n    return cast;\n}\n\nexport const getReviews = async movieId => {\n    const {data} = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`);\n\n    return data.results;\n}\n\nexport const getGenres= async (movieId) => {\n    const {data:{genres}} = await axios.get(`/movie/${movieId}?api_key=${KEY_API}`);\n    // console.log(res.data.genres)\n    return genres;\n}\n\n\n"],"names":["Link","styled","NavLink","ItemsGenres","GenresList","useState","movie","setMovies","genres","setGenres","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","getFilmsById","then","getGenres","type","onClick","state","from","title","src","backdrop_path","alt","popularity","toFixed","vote_average","map","id","name","overview","to","KEY_API","axios","getTrendingFilms","results","data","getFilmsByQuery","query","getCast","cast","getReviews"],"sourceRoot":""}